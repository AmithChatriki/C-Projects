#include<stdio.h>
void displayboard(char board[])
{
    printf(" %c | %c | %c \n",board[7],board[8],board[9]);
    printf("-----------\n");
    printf(" %c | %c | %c \n",board[4],board[5],board[6]);
    printf("-----------\n");
    printf(" %c | %c | %c \n",board[1],board[2],board[3]);
}
void placemarker(char board[],char marker,int position)
{
    board[position] = marker;
}

int wincheck(char board[],char mark)
{    
    return ((board[7] == mark && board[8] == mark && board[9] == mark) || //across the top
    (board[4] == mark && board[5] == mark && board[6] == mark) || //across the middle
    (board[1] == mark && board[2] == mark && board[3] == mark) || //across the bottom
    (board[7] == mark && board[4] == mark && board[1] == mark) || //down the middle
    (board[8] == mark && board[5] == mark && board[2] == mark) || //down the middle
    (board[9] == mark && board[6] == mark && board[3] == mark) || //down the right side
    (board[7] == mark && board[5] == mark && board[3] == mark) || //diagonal
    (board[9] == mark && board[5] == mark && board[1] == mark)); //diagonal
}
int choosefirst(void)
{
    int n;
    printf("Who will play first ? \n");
    printf("Choose 1 or 2 = ");
    scanf("%d",&n);
    if(n==1)
       return 1;
    else
       return 2;
}          
int spacecheck(char board[],int position)
{    
    if(board[position] == ' ')
       return 1;
    else
       return 0;
}
int fullboardcheck(char board[])
{
    int i;
    for(i=0;i<10;i++)
        if(spacecheck(board,i))
            return 0;
    return 1;   
}
int playerchoice(char board[])
{
    int pos = 0;
    printf("Choose your next position: (1-9) = ");
    scanf("%d",&pos);
    return pos;
}
int replay()
{    
    char a[4];
    printf("Do you want to play again? Enter Yes or No : ");
    scanf("%s",a);
    if(a[0]=='y' || a[0] == 'Y')
       return 1;
    else
       return 0;
}
int main()
{
   printf("\t\tWelcome to Tic Tac Toe!\n");
   while(1)
   {
      char board[10] = {"          "};
      char p1marker,p2marker;
      printf("\nPlayer 1 : Do you want to be X or O? = ");
      while(1)
      {
         char marker;
         scanf("%c",&marker);
         if(marker=='X' || marker=='x')
         {
            p1marker = 'X';
            p2marker = 'O';
            break;
         }
         else if(marker=='O' || marker=='o')
         {
            p1marker = 'O';
            p2marker = 'X';
            break;
         }
         else
         {
            printf("\nX or O? = ");
         }   
      }
      int turn = choosefirst();
      printf("Player %d will go first!\n",turn);
      int gameon;
      char p[4];
      printf("Are you ready to Play? Enter Yes or No = ");
      scanf("%s",p);
      if(p[0]=='y' || p[0]=='Y')
         gameon = 1;
      else
         gameon = 0;
      int position;   
      while(gameon)
      {
          if(turn == 1)
          {
              displayboard(board);
              position = playerchoice(board);
              placemarker(board,p1marker,position);
              if(wincheck(board,p1marker))
              {
                 displayboard(board);
                 printf("Congratulations you have won the game !!\n");
                 gameon = 0;
              }
              else
              {
                 if(fullboardcheck(board))
                 {
                    displayboard(board);
                    printf("The Game is Draw\n");
                    break;
                 }
                 else
                    turn = 2;
              }
          }
          else
          {
              displayboard(board);
              position = playerchoice(board);
              placemarker(board,p2marker,position);
              if(wincheck(board,p2marker))
              {
                 displayboard(board);
                 printf("Player 2 has Won !!\n");
                 gameon = 0;
              }
              else
              {
                 if(fullboardcheck(board))
                 {
                    displayboard(board);
                    printf("The Game is Draw\n");
                    break;
                 }
                 else
                    turn = 1;
              }
          }
      }
      if(!replay())
         break;
   }
   return 0;
}
